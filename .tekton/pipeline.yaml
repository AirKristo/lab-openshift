apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: cd-pipeline
spec:
  workspaces:
    - name: pipeline-workspace
  params:
    - name: GIT_REPO
      default: 'https://github.com/rofrano/lab-openshift.git'
      description: 'URL of repo to clone '
      type: string
    - name: GIT_BRANCH
      default: master
      description: Branch to clone
      type: string
    - name: IMAGE_NAME
      default: >-
        image-registry.openshift-image-registry.svc:5000/rofrano-dev/petstore:0.1.0
      description: Name of image to build
      type: string
    - name: GREEN_ARGS
      default: '-vvv --processes=1 --run-coverage --minimum-coverage=95'
      description: Arguments to geen command
      type: string
    - name: APP_NAME
      default: petstore
      description: Name of the application
      type: string
  tasks:
    - name: git-clone
      params:
        - name: url
          value: $(params.GIT_REPO)
        - name: revision
          value: $(params.GIT_BRANCH)
        - name: refspec
          value: ''
        - name: submodules
          value: 'true'
        - name: depth
          value: '1'
        - name: sslVerify
          value: 'true'
        - name: crtFileName
          value: ca-bundle.crt
        - name: subdirectory
          value: ''
        - name: sparseCheckoutDirectories
          value: ''
        - name: deleteExisting
          value: 'true'
        - name: httpProxy
          value: ''
        - name: httpsProxy
          value: ''
        - name: noProxy
          value: ''
        - name: verbose
          value: 'true'
        - name: gitInitImage
          value: >-
            registry.redhat.io/openshift-pipelines/pipelines-git-init-rhel8@sha256:1a50511583fc02a27012d17d942e247813404104ddd282d7e26f99765174392c
        - name: userHome
          value: /home/git
      taskRef:
        kind: ClusterTask
        name: git-clone
      workspaces:
        - name: output
          workspace: pipeline-workspace
    - name: flake8
      params:
        - name: image
          value: 'docker.io/python:3.11-slim'
        - name: path
          value: .
        - name: requirements_file
          value: requirements.txt
        - name: args
          value:
            - '--count'
            - '--max-complexity=10'
            - '--max-line-length=127'
            - '--statistics'
      runAfter:
        - git-clone
      taskRef:
        kind: Task
        name: flake8
      workspaces:
        - name: source
          workspace: pipeline-workspace
    - name: buildah
      params:
        - name: IMAGE
          value: $(params.IMAGE_NAME)
        - name: BUILDER_IMAGE
          value: >-
            registry.redhat.io/rhel8/buildah@sha256:00795fafdab9bbaa22cd29d1faa1a01e604e4884a2c935c1bf8e3d1f0ad1c084
        - name: STORAGE_DRIVER
          value: vfs
        - name: DOCKERFILE
          value: ./Dockerfile
        - name: CONTEXT
          value: .
        - name: TLSVERIFY
          value: 'true'
        - name: FORMAT
          value: oci
        - name: BUILD_EXTRA_ARGS
          value: ''
        - name: PUSH_EXTRA_ARGS
          value: ''
        - name: SKIP_PUSH
          value: 'false'
      runAfter:
        - flake8
        - green
      taskRef:
        kind: ClusterTask
        name: buildah
      workspaces:
        - name: source
          workspace: pipeline-workspace
    - name: green
      params:
        - name: ARGS
          value: $(params.GREEN_ARGS)
      runAfter:
        - git-clone
      taskRef:
        kind: Task
        name: green
      workspaces:
        - name: source
          workspace: pipeline-workspace
    - name: openshift-client
      params:
        - name: SCRIPT
          value: oc create deploy $(params.APP_NAME) --image $(params.IMAGE_NAME)
        - name: VERSION
          value: latest
      runAfter:
        - buildah
      taskRef:
        kind: ClusterTask
        name: openshift-client
      workspaces:
        - name: manifest-dir
          workspace: pipeline-workspace
